{"version":3,"sources":["components/card/card.jsx","components/card-list/card-list.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","type","placeholder","onChange","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iSAaeA,G,YAVF,SAACC,GACV,OAEA,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,YAChF,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,aCCXC,EAPE,SAACR,GACd,OAAS,qBAAKC,UAAU,YAAf,SAA4BD,EAAMS,SAASC,KAAI,SAACP,GAAD,OACpD,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UC8BZO,G,wDA7Bb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXH,SAAU,GACVI,YAAa,IAJH,E,gEAOO,IAAD,OAClBC,MAAM,8CAA8CC,MAAK,SAACC,GAAD,OACvDA,EAASC,OAAOF,MAAK,SAACG,GAAD,OAAW,EAAKC,SAAS,CAAEV,SAAUS,Y,+BAGpD,IAAD,SAC2BE,KAAKR,MAA/BH,EADD,EACCA,SAAUI,EADX,EACWA,YACZQ,EAAmBZ,EAASa,QAAO,SAACnB,GAAD,OACvCA,EAAQG,KAAKiB,cAAcC,SAASX,EAAYU,kBAElD,OACE,sBAAKtB,UAAU,MAAf,UACE,uBACEwB,KAAK,SACLC,YAAY,kBACZC,SAAU,SAACC,GAAD,OAAO,EAAKT,SAAS,CAAEN,YAAae,EAAEC,OAAOC,WAEzD,cAAC,EAAD,CAAUrB,SAAUY,W,GAzBVU,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5d5650aa.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css'\r\n\r\nconst Card = (props) => {\r\n    return ( \r\n    \r\n    <div className='card-container'>\r\n        <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt=\"monster\"/>\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div> );\r\n}\r\n \r\nexport default Card;","import React from 'react';\r\nimport Card from '../card/card';\r\n\r\nconst CardList = (props) => {\r\n    return ( <div className='card-list'>{props.monsters.map((monster) => (\r\n        <Card key={monster.id} monster={monster}/>\r\n          ))}</div> );\r\n}\r\n \r\n \r\nexport default CardList;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport CardList from \"./components/card-list/card-list\";\r\nimport \"./components/card-list/card-list.styles.css\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      monsters: [],\r\n      searchField: \"\",\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then((response) =>\r\n      response.json().then((users) => this.setState({ monsters: users }))\r\n    );\r\n  }\r\n  render() {\r\n    const { monsters, searchField } = this.state;\r\n    const filteredMonsters = monsters.filter((monster) =>\r\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\r\n    );\r\n    return (\r\n      <div className=\"App\">\r\n        <input\r\n          type=\"search\"\r\n          placeholder=\"Search Monsters\"\r\n          onChange={(e) => this.setState({ searchField: e.target.value })}\r\n        />\r\n        <CardList monsters={filteredMonsters}></CardList>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}